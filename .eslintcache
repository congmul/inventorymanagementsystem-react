[{"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/index.js":"1","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/App.js":"2","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/Wrapper/index.jsx":"3","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/NavBar/index.jsx":"4","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/Footer/index.jsx":"5","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/Frame/index.jsx":"6","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Dashboard/index.jsx":"7","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Cymbals/index.jsx":"8","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/NavBarLeft/index.jsx":"9","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/NewCymbalCSV/index.jsx":"10","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Cymbals/Addcymbal/index.jsx":"11","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Cymbals/AddCymbalPack/index.js":"12","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/NewCymbalPackCSV/index.jsx":"13","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Cymbals/SearchCymbal/index.jsx":"14","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Orders/index.jsx":"15","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/utils/OrdersContext.jsx":"16"},{"size":265,"mtime":1611700844124,"results":"17","hashOfConfig":"18"},{"size":1326,"mtime":1611969000472,"results":"19","hashOfConfig":"18"},{"size":163,"mtime":1611853934521,"results":"20","hashOfConfig":"18"},{"size":593,"mtime":1611870096192,"results":"21","hashOfConfig":"18"},{"size":308,"mtime":1611855258437,"results":"22","hashOfConfig":"18"},{"size":731,"mtime":1611856286403,"results":"23","hashOfConfig":"18"},{"size":3215,"mtime":1611864885014,"results":"24","hashOfConfig":"18"},{"size":521,"mtime":1611874391654,"results":"25","hashOfConfig":"18"},{"size":1186,"mtime":1611965071861,"results":"26","hashOfConfig":"18"},{"size":6185,"mtime":1611964259440,"results":"27","hashOfConfig":"18"},{"size":5078,"mtime":1611873438268,"results":"28","hashOfConfig":"18"},{"size":2696,"mtime":1611874055920,"results":"29","hashOfConfig":"18"},{"size":5222,"mtime":1611968769808,"results":"30","hashOfConfig":"18"},{"size":12265,"mtime":1611959110333,"results":"31","hashOfConfig":"18"},{"size":5282,"mtime":1612027177570,"results":"32","hashOfConfig":"18"},{"size":279,"mtime":1612025020043,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ty0k90",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/index.js",[],["69","70"],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/App.js",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/Wrapper/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/NavBar/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/Footer/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/Frame/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Dashboard/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Cymbals/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/components/NavBarLeft/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/NewCymbalCSV/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Cymbals/Addcymbal/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Cymbals/AddCymbalPack/index.js",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/NewCymbalPackCSV/index.jsx",[],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Cymbals/SearchCymbal/index.jsx",[],["71","72"],"/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/pages/Orders/index.jsx",["73","74","75","76","77","78"],"import React, { useState } from 'react'\nimport { Table, Row, Button } from 'react-bootstrap';\nimport * as XLSX from 'xlsx';\nimport DataTable from 'react-data-table-component';\n// import OrdersContext from '../../utils/OrdersContext';\n\nimport './style.css';\n\nexport default function Orders() {\n    document.title = `Orders - IMS - Wavemg`;\n\n    const [tableDisplay, setTableDisplay] = useState({ display: \"block\" }); // Handble state for Table display or not\n    const [uploadButtonDisplay, setUploadButtonDisplay] = useState({ display: \"none\" }); // Handble state for Upload Button display or not\n    const [cymbalOrders, setCymbalOrders] = useState(\n        [{\n            year: \"\",\n            month: \"\",\n            product: \"\",\n            code: \"\",\n            date: \"\",\n            buyer: \"\",\n            description: \"\",\n            price:0,\n            selling:0,\n            return: false,\n            shipped: true,\n          }]\n    )\n    const [cymbalColumnOrders, setCymbalColumnOrders] = useState(\n        [{\n            name: \"\",\n            selector: \"\",\n          }]\n    )\n    const [columns, setColumns] = useState([]);\n    const [data, setData] = useState([]);\n\n    const [listsCSV, setListsCSV] = useState([]);\n\n\n    // process CSV data\n    const processData = dataString => {\n        const dataStringLines = dataString.split(/\\r\\n|\\n/);\n        const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n        console.log(\"headers\");\n        console.log(headers);\n        // TODO: If 9 > headers.length > 9, return error and stop processing - This numbers of columns are NINE (category / type / size / description / code / qty / ebay_price / website_price / group_code)\n\n        const list = [];\n        for (let i = 1; i < dataStringLines.length; i++) {\n            const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n            if (headers && row.length === headers.length) {\n                const obj = {};\n                for (let j = 0; j < headers.length; j++) {\n                    let d = row[j];\n                    if (d.length > 0) {\n                        if (d[0] === '\"')\n                            d = d.substring(1, d.length - 1);\n                        if (d[d.length - 1] === '\"')\n                            d = d.substring(d.length - 2, 1);\n                    }\n                    if (headers[j]) {\n                        obj[headers[j]] = d;\n                    }\n                }\n\n                // remove the blank rows\n                if (Object.values(obj).filter(x => x).length > 0) {\n                    list.push(obj);\n                }\n            }\n        }\n\n        // prepare columns list from headers\n        const columns = headers.map(c => ({\n            name: c,\n            selector: c,\n        }));\n\n        //Store lists of CSV to ListsCSV state to use it with UploadToDB button\n        setListsCSV(list);\n\n\n        //Add columns style\n        columns[0][\"width\"] = \"80px\";\n        columns[0][\"sortable\"] = true;\n        columns[1][\"width\"] = \"80px\";\n        columns[2][\"width\"] = \"100px\";\n        columns[3][\"width\"] = \"100px\";\n        columns[4][\"width\"] = \"100px\";\n        columns[5][\"width\"] = \"100px\";\n        columns[7][\"width\"] = \"100px\";\n        columns[8][\"width\"] = \"100px\";\n        columns[9][\"width\"] = \"100px\";\n        columns[10][\"width\"] = \"100px\";\n        // setCymbalOrders(list);\n        // setCymbalColumnOrders(columns);\n        // cymbalColumnOrders[0][\"width\"] = \"100px\"\n        // console.log(cymbalOrders);\n        // console.log(cymbalColumnOrders);\n        setData(list);\n        setColumns(columns);\n    }\n    // handle file upload\n    function handleFileUpload(e) {\n        setUploadButtonDisplay({ display: \"block\" })\n        setTableDisplay({ display: \"none\" });\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = (evt) => {\n            /* Parse data */\n            const bstr = evt.target.result;\n            const wb = XLSX.read(bstr, { type: 'binary' });\n\n            /* Get first worksheet */\n            const wsname = wb.SheetNames[0];\n            const ws = wb.Sheets[wsname];\n            /* Convert array of arrays */\n            const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n            processData(data);\n        };\n        reader.readAsBinaryString(file);\n\n    }\n\n    // Handle file upload to DB\n    function handleUploadLists(e) {\n        e.preventDefault()\n\n        //TODO:Add Data to DB by using list\n        console.log(listsCSV);\n        alert(\"The lists are stored to DB\");\n    }\n\n    return (\n        <div className=\"shadow ml-5 mr-3 mb-4 p-5 bg-white rounded\" style={{ width: \"900px\" }}>\n            <Row className=\"mb-3\">\n                <h4>Upload your CSV File</h4>\n            </Row>\n\n            <Row className=\"mb-5 ml-2\">\n                <input type=\"file\" name=\"File Upload\" accept=\".csv, .xlsx, .xls\" className=\"btn\" onChange={handleFileUpload} />\n                <Button style={uploadButtonDisplay} onClick={handleUploadLists}>Upload Lists to DB</Button>\n            </Row>\n            <Row className=\"mt-5\">\n                <DataTable pagination highlightOnHover columns={columns} data={data} />\n            </Row>\n        </div>\n    )\n}\n","/Users/jehyun/Desktop/School/00_Git_Project/inventorymanagementsystem-react/src/utils/OrdersContext.jsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":15},{"ruleId":"85","severity":1,"message":"89","line":12,"column":12,"nodeType":"87","messageId":"88","endLine":12,"endColumn":24},{"ruleId":"85","severity":1,"message":"90","line":14,"column":12,"nodeType":"87","messageId":"88","endLine":14,"endColumn":24},{"ruleId":"85","severity":1,"message":"91","line":14,"column":26,"nodeType":"87","messageId":"88","endLine":14,"endColumn":41},{"ruleId":"85","severity":1,"message":"92","line":29,"column":12,"nodeType":"87","messageId":"88","endLine":29,"endColumn":30},{"ruleId":"85","severity":1,"message":"93","line":29,"column":32,"nodeType":"87","messageId":"88","endLine":29,"endColumn":53},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'tableDisplay' is assigned a value but never used.","'cymbalOrders' is assigned a value but never used.","'setCymbalOrders' is assigned a value but never used.","'cymbalColumnOrders' is assigned a value but never used.","'setCymbalColumnOrders' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]